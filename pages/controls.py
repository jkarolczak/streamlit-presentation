from PIL import Image
from time import sleep

import streamlit as st

def status():
    st.title("Status")
    st.markdown("---")

    st.header("Information messages")
    col1, col2, col3, col4 = st.columns(4)
    col1.info("This is an information")
    col1.code("col1.info(\"This is an information\")")
    col2.success("This is a success")
    col2.code("col2.success(\"This is a success\")")
    col3.warning("This is a warning!")
    col3.code("col3.warning(\"This is a warning!\")")
    col4.error("This is an error!")
    col4.code("col4.error(\"This is an error!\")")
    
    st.markdown("---")
    st.header("Progress indicators")
    if st.button("Show progress bar"):
        progress_bar = st.progress(0)
        for i in range(1, 21):
            sleep(0.1)
            progress_bar.progress(5 * i)
                
    st.code("""
progress_bar = col1.progress(0)
while True:
    for i in range(1, 101):
        sleep(0.1)
        progress_bar.progress(i)    
    """)
    if st.button("Show spinner"):
        with st.spinner('Wait for it...'):
            sleep(2)
    st.code("""
with st.spinner('Wait for it...'):
    slow_function()
    """, language="python")
        
    st.markdown("---")
    st.header("Easter egg")
    if st.button("Release baloons"):
        st.balloons()
    st.code("st.balloons()", language="python")
    with st.expander("Docs"):
        st.markdown("""
        - [Informational message Streamlit API reference](https://docs.streamlit.io/library/api-reference/status/st.info)                
        - [Success message Streamlit API reference](https://docs.streamlit.io/library/api-reference/status/st.success)                
        - [Warning message Streamlit API reference](https://docs.streamlit.io/library/api-reference/status/st.warning)                
        - [Error message Streamlit API reference](https://docs.streamlit.io/library/api-reference/status/st.error)                
        - [Progress bar Streamlit API reference](https://docs.streamlit.io/library/api-reference/status/st.progress)                
        - [Spinner Streamlit API reference](https://docs.streamlit.io/library/api-reference/status/st.spinner)                
        - [Baloons API reference](https://docs.streamlit.io/library/api-reference/status/st.balloons)  
        """)


def layout():
    st.title("Layout")
    st.markdown("---")
    
    st.header("Columns")
    st.markdown("To split page into columns use `st.columns(num_of_cols)`.")
    col1, col2 = st.columns(2)
    col1.subheader("1st approach")
    col1.code("col1, col2 = st.columns(2)", language="python")
    
    col2.subheader("2nd approach")
    col2.code("col1, col2 = st.columns(2)", language="python")
    col11, col12, col21, col22 = st.columns(4)
    col11.subheader("Column 1")
    col11.code("col1.subheader(\"Column 1\")")
    col12.subheader("Column 2")
    col12.code("col2.subheader(\"Column 2\")")
    
    col21.subheader("Column 1")
    col21.code("""
    with col1:
        st.subheader(\"Column 1\")
    """)
    col22.subheader("Column 2")
    col22.code("""
    with col2:
        st.subheader(\"Column 2\")
    """)
    
    st.markdown("---")
    st.header("Expander")
    col1, col2 = st.columns(2)
    with col1:
        with st.expander("Click to expand"):
            st.image('images/spanish-inquisition.jpg')
            
    with col2:
        st.code("""
with st.expander("Click to expand"):
    st.image('image.jpg')        
        """)
    
    st.markdown("---")
    st.header("Mixing the order")
    st.markdown("Elements generated by Stremlit are ordered according to execution. If you want to mix the order you can use `st.container` or `st.empty` elements.")
    col1, col2 = st.columns(2)
    col11, col12, col21, col22 = st.columns(4)
    with col1:
        st.subheader("Container")

        container = st.container()
        container.markdown("Generated first")
        st.markdown("Generated second")
        container.markdown("Generated third")
        st.code("""
container = st.container()
container.markdown("Generated first")
st.markdown("Generated second")
container.markdown("Generated third")
        """)
        
    with col2:
        st.subheader("Empty")
        placeholder = st.empty()
        st.markdown("Generated first")
        placeholder.markdown("Generated second")
        st.markdown("Generated third")
        st.code("""
placeholder = st.empty()
st.markdown("Generated first")
placeholder.markdown("Generated second")
st.markdown("Generated third")         
        """)
        
    with st.expander("Docs"):
        st.markdown("""
        - [Columns Streamlit API reference](https://docs.streamlit.io/library/api-reference/layout/st.columns)        
        - [Expander Streamlit API reference](https://docs.streamlit.io/library/api-reference/layout/st.expander)
        - [Container Streamlit API reference](https://docs.streamlit.io/library/api-reference/layout/st.container)           
        - [Empty Streamlit API reference](https://docs.streamlit.io/library/api-reference/layout/st.empty)          
        """)
        